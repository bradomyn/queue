//
// This file is part of an OMNeT++/OMNEST simulation example.
//
// Copyright (C) 1992-2008 Andras Varga
//
// This file is distributed WITHOUT ANY WARRANTY. See the file
// `license' for details on this and other legal matters.
//


#include "WRS.h"

namespace wrs {

Define_Module(WRS);

simtime_t WRS::startService(cMessage *msg)
{
    EV << "Starting service of " << msg->getName() << endl;
    std::cout << "Starting service of " << msg->getName() << std::endl;
    return par("serviceTime");
}

void WRS::endService(cMessage *msg)
{
    EV << "Completed service of " << msg->getName() << endl;
    std::cout << "Completed service of " << msg->getName() << std::endl;


    // extract priority from jobname
    std::string jobname = std::string(msg->getName());
	size_t found1;
	found1 = jobname.find("y: ");
	//std::cout << "jobname " << jobname << " found1 " << found1 << std::endl;
	// extract priority from jobname
	int prio=0;
	if( found1!=std::string::npos ) {
		std::string priority = jobname.substr(found1+2);
		std::istringstream stm;
		stm.str(priority);
		stm >> prio;
		//std::cout << "priority " << prio << std::endl;
	}

#if 0
	// deliver to matching sink
    send( msg, "out", prio );
#else
    if( prio==7 ) {
    	sendDirect(msg, s7, "sendDirect");
    } else {
    	/*switch (prio) {
    	case 0:

    	}*/
    }
#endif

}

}; //namespace

